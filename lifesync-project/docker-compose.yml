services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: lifesync_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U username -d lifesync_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # LifeSync Backend API
  backend:
    build:
      context: ./lifesync-backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://username:password@db:5432/lifesync_db
      JWT_SECRET: lifesync_super_secret_jwt_key_2024_production
      WEATHER_API_KEY: 607e6836f17b4dfc966100740252906
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./lifesync-backend:/app
      - /app/node_modules
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        npx prisma migrate deploy &&
        npx prisma generate &&
        echo 'Starting LifeSync Backend...' &&
        npm start
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
